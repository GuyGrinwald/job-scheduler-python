kind: Namespace
apiVersion: v1
metadata:
  name: job-scheduler-namespace
  labels:
    app: job-scheduler

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: db-pv
  namespace: job-scheduler-namespace
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/db-pv

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: db-pvc
  namespace: job-scheduler-namespace
  labels:
    type: local
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 512M
  volumeName: db-pv

---

apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
  namespace: job-scheduler-namespace
type: Opaque
stringData:
  user: db_user
  password: db_password

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: job-scheduler-deployment
  namespace: job-scheduler-namespace
  labels:
    app: job-scheduler
spec:
  replicas: 1 # this should be changed for non local environments
  selector:
    matchLabels:
      app: job-scheduler
  template:
    metadata:
      labels:
        app: job-scheduler
    spec:
      containers:
      - name: celery-wroker
        image: celery-worker
        imagePullPolicy: Never # this is so we'll use our local image version
        resources:
          requests:
            cpu: 1
            memory: "256M"
          limits:
            cpu: 1
            memory: "256M" 
        env:
          - name: ALLOW_REDIRECTS
            value: "False"
          - name: WEBHOOK_TIMEOUT
            value: "3"
          - name: BROKER_CONNECTION
            value: "pyamqp://guest@localhost:5672"
          - name: BACKEND_CONNECTION
            value: "redis://localhost:6379/0"
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: password
          - name: POSTGRES_DB
            value: timer
          - name: DJANGO_SETTINGS_MODULE
            value: db.settings
      - name: celery-broker
        image: rabbitmq:3-management
        imagePullPolicy: Always
        ports:
          - containerPort: 5672
          - containerPort: 15672
      - name: job-scheduler-web
        image: job-scheduler-web
        imagePullPolicy: Never 
        ports:
          - containerPort: 5000
        env:
        - name: APP_DOMAIN
          value: "localhost"
        - name: BROKER_CONNECTION
          value: "pyamqp://guest@localhost:5672"
        - name: BACKEND_CONNECTION
          value: "redis://localhost:6379/0"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: POSTGRES_DB
          value: timer
        - name: DJANGO_SETTINGS_MODULE
          value: db.settings
        resources:
          requests:
            cpu: 1
            memory: "256M"
          limits:
            cpu: 1
            memory: "256M"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
      - name: db
        image: postgres:15
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: POSTGRES_DB
          value: timer
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: db-volume-mount
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-volume-mount
        persistentVolumeClaim:
          claimName: db-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: job-scheduler-service
  namespace: job-scheduler-namespace
  labels:
    app: job-scheduler
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
    name: web
  - port: 5672
    protocol: TCP
    targetPort: 5672
    name: rabbit
  - port: 15672
    protocol: TCP
    targetPort: 15672
    name: rabbit-web
  - port: 5432
    protocol: TCP
    targetPort: 5432
    name: postgres
  selector:
    app: job-scheduler
  type: LoadBalancer